1...... Searh by date


if (isset($_GET['date'])) {
    // Sanitize input value to prevent SQL injection
    $searchDate = mysqli_real_escape_string($conn, $_GET['date']);
    
    // Construct the date range for the search (from selected date to next day)
    $nextDay = date('Y-m-d', strtotime($searchDate . ' +1 day'));


<label><b>Date Range</b></label><br>
<input type="date" name="start_date" placeholder="Start Date">
<input type="date" name="end_date" placeholder="End Date">
<button class="btn-add1" type="submit"><img src="images/search.png"></button>


if (isset($_GET['start_date']) && isset($_GET['end_date'])) {
    $start_date = mysqli_real_escape_string($conn, $_GET['start_date']);
    $end_date = mysqli_real_escape_string($conn, $_GET['end_date']);
    $sql .= " AND a.appointment_date BETWEEN '$start_date' AND '$end_date'";
}

<form method="GET">



<tr>
    <th>Pet Name</th>
    <th>Date</th>
    <th>Time</th>
    <th>Slot No</th>
    <th>Doctor</th>
    <th>Action</th>
    <th>Appointment Status</th>
</tr>

<?php
while ($row_getdetails = mysqli_fetch_assoc($result_getdetails)) {
    // ... existing code ...

    // Check if the appointment date is within the selected date range
    $appointment_date = $row_getdetails["appointment_date"];
    if ($appointment_date >= $start_date && $appointment_date <= $end_date) {
        // Display the appointment details within the date range
        // ... existing code ...
    }
}
?>

2........... To get the count of rows in a table, you can use a SQL query with the COUNT() function. Here's an example:

php

<?php

// Assuming you have a database connection established

$tableName = "your_table_name";

$sql = "SELECT COUNT(*) AS row_count FROM $tableName";
$result = mysqli_query($conn, $sql);

if ($result) {
    $row = mysqli_fetch_assoc($result);
    $rowCount = $row['row_count'];
    echo "Number of rows in the table: " . $rowCount;
} else {
    echo "Error executing the query: " . mysqli_error($conn);
}

3........ 
To implement a filter search to view appointments on a specific date, you can modify your PHP code as follows:

Add an HTML form input field where the user can enter the date:
html
Copy code
<form method="get" action="">
  <label for="search_date">Search Appointments:</label>
  <input type="date" id="search_date" name="search_date">
  <button type="submit">Search</button>
</form>
Update the SQL query to include a condition based on the search date:
php
Copy code
// Check if the search date is set in the URL
if (isset($_GET['search_date'])) {
    // Retrieve the search date from the URL
    $searchDate = $_GET['search_date'];
    
    // Update the SQL query to include the search date condition
     $sql = "SELECT * FROM appointment WHERE appointment_date = '" . $searchDate . "'";
} else {
    // Default SQL query to retrieve all appointments if the search date is not provided
    $sql = "SELECT * FROM appointment";
}
Execute the modified SQL query and display the filtered appointments:
php
Copy code
$result = mysqli_query($conn, $sql);

// Check if the query failed
if (!$result) {
    die("Error retrieving appointments: " . mysqli_error($conn));
}

// Check if there are appointments found
if (mysqli_num_rows($result) == 0) {
    echo "No appointments found for the selected date.";
    } else {
    // Display the filtered appointments
    while ($appointment = mysqli_fetch_assoc($result)) {
        // Display appointment details
        echo "Appointment ID: " . $appointment['appointment_id'] . "<br>";
        echo "Appointment Date: " . $appointment['appointment_date'] . "<br>";
        // Display other appointment details...
        echo "<br>";
    }
}

4....